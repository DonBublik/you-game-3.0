'use strict';

/** @type {import('sequelize-cli').Migration} */
module.exports = {
  async up (queryInterface, Sequelize) {
    await queryInterface.bulkInsert(
      'Questions',
      [
        {
          text: 'Вопрос 1',
          theme_id: 1,
          score: 100,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 2',
          theme_id: 1,
          score: 200,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 3',
          theme_id: 1,
          score: 300,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 4',
          theme_id: 1,
          score: 400,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 5',
          theme_id: 1,
          score: 500,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 1',
          theme_id: 2,
          score: 100,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 2',
          theme_id: 2,
          score: 200,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 3',
          theme_id: 2,
          score: 300,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 4',
          theme_id: 2,
          score: 400,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 5',
          theme_id: 2,
          score: 500,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 1',
          theme_id: 3,
          score: 100,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 2',
          theme_id: 3,
          score: 200,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 3',
          theme_id: 3,
          score: 300,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 4',
          theme_id: 3,
          score: 400,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 5',
          theme_id: 3,
          score: 500,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 1',
          theme_id: 4,
          score: 100,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 2',
          theme_id: 4,
          score: 200,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 3',
          theme_id: 4,
          score: 300,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 4',
          theme_id: 4,
          score: 400,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 5',
          theme_id: 4,
          score: 500,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 1',
          theme_id: 5,
          score: 100,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 2',
          theme_id: 5,
          score: 200,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 3',
          theme_id: 5,
          score: 300,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 4',
          theme_id: 5,
          score: 400,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        {
          text: 'Вопрос 5',
          theme_id: 5,
          score: 500,
          answer: '1',
          createdAt: new Date(),
          updatedAt: new Date(),
        },
      ],
      {}
    );
  },

  async down (queryInterface, Sequelize) {
    await queryInterface.bulkDelete('Questions', null, {});
  }
};
